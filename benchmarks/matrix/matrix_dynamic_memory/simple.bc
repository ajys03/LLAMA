; ModuleID = 'matrix.c'
source_filename = "matrix.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128-Fn32"
target triple = "arm64-apple-macosx14.0.0"

@manual_mode = global i8 0, align 1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define i32 @main(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  call void @ariel_enable()
  %19 = load ptr, ptr %5, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 1
  %21 = load ptr, ptr %20, align 8
  %22 = call i32 @atoi(ptr noundef %21)
  store i32 %22, ptr %8, align 4
  %23 = load ptr, ptr %5, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 2
  %25 = load ptr, ptr %24, align 8
  %26 = call i32 @atoi(ptr noundef %25)
  store i32 %26, ptr %9, align 4
  %27 = load ptr, ptr %5, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 3
  %29 = load ptr, ptr %28, align 8
  %30 = call i32 @atoi(ptr noundef %29)
  store i32 %30, ptr %10, align 4
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 4
  %33 = load ptr, ptr %32, align 8
  %34 = call i32 @atoi(ptr noundef %33)
  store i32 %34, ptr %11, align 4
  %35 = load i32, ptr %9, align 4
  %36 = load i32, ptr %8, align 4
  %37 = mul nsw i32 %35, %36
  %38 = sext i32 %37 to i64
  %39 = call ptr @_internal_calloc(i64 noundef 8, i64 noundef %38)
  store ptr %39, ptr %6, align 8
  %40 = load i32, ptr %11, align 4
  %41 = load i32, ptr %10, align 4
  %42 = mul nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = call ptr @_internal_calloc(i64 noundef 8, i64 noundef %43)
  store ptr %44, ptr %7, align 8
  store i32 0, ptr %12, align 4
  br label %45

45:                                               ; preds = %69, %2
  %46 = load i32, ptr %12, align 4
  %47 = load i32, ptr %9, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %72

49:                                               ; preds = %45
  store i32 0, ptr %13, align 4
  br label %50

50:                                               ; preds = %54, %49
  %51 = load i32, ptr %13, align 4
  %52 = load i32, ptr %8, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %69

54:                                               ; preds = %50
  %55 = load i32, ptr %13, align 4
  %56 = load i32, ptr %12, align 4
  %57 = add nsw i32 %55, %56
  %58 = srem i32 %57, 10
  %59 = load ptr, ptr %6, align 8
  %60 = load i32, ptr %12, align 4
  %61 = load i32, ptr %8, align 4
  %62 = load i32, ptr %13, align 4
  %63 = mul nsw i32 %61, %62
  %64 = add nsw i32 %60, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, ptr %59, i64 %65
  store i32 %58, ptr %66, align 4
  %67 = load i32, ptr %13, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, ptr %13, align 4
  br label %50, !llvm.loop !5

69:                                               ; preds = %50
  %70 = load i32, ptr %12, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, ptr %12, align 4
  br label %45, !llvm.loop !7

72:                                               ; preds = %45
  store i32 0, ptr %12, align 4
  br label %73

73:                                               ; preds = %97, %72
  %74 = load i32, ptr %12, align 4
  %75 = load i32, ptr %11, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %73
  store i32 0, ptr %13, align 4
  br label %78

78:                                               ; preds = %82, %77
  %79 = load i32, ptr %13, align 4
  %80 = load i32, ptr %10, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %97

82:                                               ; preds = %78
  %83 = load i32, ptr %13, align 4
  %84 = load i32, ptr %12, align 4
  %85 = add nsw i32 %83, %84
  %86 = srem i32 %85, 10
  %87 = load ptr, ptr %7, align 8
  %88 = load i32, ptr %12, align 4
  %89 = load i32, ptr %10, align 4
  %90 = load i32, ptr %13, align 4
  %91 = mul nsw i32 %89, %90
  %92 = add nsw i32 %88, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, ptr %87, i64 %93
  store i32 %86, ptr %94, align 4
  %95 = load i32, ptr %13, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, ptr %13, align 4
  br label %78, !llvm.loop !8

97:                                               ; preds = %78
  %98 = load i32, ptr %12, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, ptr %12, align 4
  br label %73, !llvm.loop !9

100:                                              ; preds = %73
  %101 = load i32, ptr %9, align 4
  %102 = load i32, ptr %11, align 4
  %103 = icmp slt i32 %101, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = load i32, ptr %9, align 4
  br label %108

106:                                              ; preds = %100
  %107 = load i32, ptr %11, align 4
  br label %108

108:                                              ; preds = %106, %104
  %109 = phi i32 [ %105, %104 ], [ %107, %106 ]
  store i32 %109, ptr %15, align 4
  %110 = load i32, ptr %8, align 4
  %111 = load i32, ptr %10, align 4
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = load i32, ptr %8, align 4
  br label %117

115:                                              ; preds = %108
  %116 = load i32, ptr %10, align 4
  br label %117

117:                                              ; preds = %115, %113
  %118 = phi i32 [ %114, %113 ], [ %116, %115 ]
  store i32 %118, ptr %16, align 4
  %119 = load i32, ptr %16, align 4
  %120 = load i32, ptr %15, align 4
  %121 = mul nsw i32 %119, %120
  %122 = sext i32 %121 to i64
  %123 = call ptr @_internal_calloc(i64 noundef 8, i64 noundef %122)
  store ptr %123, ptr %14, align 8
  store i32 0, ptr %17, align 4
  store i32 0, ptr %12, align 4
  br label %124

124:                                              ; preds = %177, %117
  %125 = load i32, ptr %12, align 4
  %126 = load i32, ptr %9, align 4
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %128, label %180

128:                                              ; preds = %124
  store i32 0, ptr %13, align 4
  br label %129

129:                                              ; preds = %173, %128
  %130 = load i32, ptr %13, align 4
  %131 = load i32, ptr %10, align 4
  %132 = icmp slt i32 %130, %131
  br i1 %132, label %133, label %176

133:                                              ; preds = %129
  store i32 0, ptr %18, align 4
  store i32 0, ptr %18, align 4
  br label %134

134:                                              ; preds = %160, %133
  %135 = load i32, ptr %18, align 4
  %136 = load i32, ptr %11, align 4
  %137 = icmp slt i32 %135, %136
  br i1 %137, label %138, label %163

138:                                              ; preds = %134
  %139 = load ptr, ptr %6, align 8
  %140 = load i32, ptr %12, align 4
  %141 = load i32, ptr %11, align 4
  %142 = load i32, ptr %18, align 4
  %143 = mul nsw i32 %141, %142
  %144 = add nsw i32 %140, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i32, ptr %139, i64 %145
  %147 = load i32, ptr %146, align 4
  %148 = load ptr, ptr %7, align 8
  %149 = load i32, ptr %18, align 4
  %150 = load i32, ptr %11, align 4
  %151 = load i32, ptr %13, align 4
  %152 = mul nsw i32 %150, %151
  %153 = add nsw i32 %149, %152
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, ptr %148, i64 %154
  %156 = load i32, ptr %155, align 4
  %157 = mul nsw i32 %147, %156
  %158 = load i32, ptr %17, align 4
  %159 = add nsw i32 %158, %157
  store i32 %159, ptr %17, align 4
  br label %160

160:                                              ; preds = %138
  %161 = load i32, ptr %18, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, ptr %18, align 4
  br label %134, !llvm.loop !10

163:                                              ; preds = %134
  %164 = load i32, ptr %17, align 4
  %165 = load ptr, ptr %14, align 8
  %166 = load i32, ptr %12, align 4
  %167 = load i32, ptr %13, align 4
  %168 = load i32, ptr %10, align 4
  %169 = mul nsw i32 %167, %168
  %170 = add nsw i32 %166, %169
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i32, ptr %165, i64 %171
  store i32 %164, ptr %172, align 4
  store i32 0, ptr %17, align 4
  br label %173

173:                                              ; preds = %163
  %174 = load i32, ptr %13, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, ptr %13, align 4
  br label %129, !llvm.loop !11

176:                                              ; preds = %129
  br label %177

177:                                              ; preds = %176
  %178 = load i32, ptr %12, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, ptr %12, align 4
  br label %124, !llvm.loop !12

180:                                              ; preds = %124
  ret i32 0
}

declare void @ariel_enable() #1

declare i32 @atoi(ptr noundef) #1

declare ptr @_internal_calloc(i64 noundef, i64 noundef) #1

attributes #0 = { noinline nounwind optnone ssp uwtable(sync) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #1 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 1}
!4 = !{!"Homebrew clang version 19.1.4"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
