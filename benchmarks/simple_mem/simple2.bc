; ModuleID = '<stdin>'
source_filename = "simple_calloc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [13 x i8] c"Successful!\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Failed!\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Done!\0A\00", align 1
@.str.3 = private unnamed_addr constant [94 x i8] c"=========================\0A Simple Memory Allocator\0A\09CALLOC EDITION\0A=========================\0A\00", align 1
@loop_counter = common global i32 0, align 4
@LLVMScore = common global i64 0, align 8

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @ariel_enable()
  call void @logo()
  %9 = call i8* @_internal_malloc(i64 3000000)
  %10 = bitcast i8* %9 to i32*
  store i32* %10, i32** %2, align 8
  store i32 0, i32* %3, align 4
  %11 = load i32, i32* %3, align 4
  %12 = icmp slt i32 %11, 750000
  br i1 %12, label %.lr.ph13, label %24

.lr.ph13:                                         ; preds = %0
  br label %13

; <label>:13:                                     ; preds = %.lr.ph13, %19
  %14 = load i32, i32* %3, align 4
  %15 = load i32*, i32** %2, align 8
  %16 = load i32, i32* %3, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  store i32 %14, i32* %18, align 4
  br label %19

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* %3, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %3, align 4
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 750000
  br i1 %23, label %13, label %._crit_edge14

._crit_edge14:                                    ; preds = %19
  br label %24

; <label>:24:                                     ; preds = %._crit_edge14, %0
  store i8 1, i8* %4, align 1
  store i32 0, i32* %3, align 4
  %25 = load i32, i32* %3, align 4
  %26 = icmp slt i32 %25, 750000
  br i1 %26, label %.lr.ph11, label %.loopexit

.lr.ph11:                                         ; preds = %24
  br label %27

; <label>:27:                                     ; preds = %.lr.ph11, %37
  %28 = load i32*, i32** %2, align 8
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %3, align 4
  %34 = icmp ne i32 %32, %33
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %27
  store i8 0, i8* %4, align 1
  br label %42

; <label>:36:                                     ; preds = %27
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* %3, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %3, align 4
  %40 = load i32, i32* %3, align 4
  %41 = icmp slt i32 %40, 750000
  br i1 %41, label %27, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %37
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %24
  br label %42

; <label>:42:                                     ; preds = %.loopexit, %35
  %43 = load i8, i8* %4, align 1
  %44 = icmp ne i8 %43, 0
  br i1 %44, label %45, label %47

; <label>:45:                                     ; preds = %42
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0))
  br label %49

; <label>:47:                                     ; preds = %42
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0))
  br label %49

; <label>:49:                                     ; preds = %47, %45
  %50 = call i8* @_internal_calloc(i64 4, i64 750000)
  %51 = bitcast i8* %50 to i32*
  store i32* %51, i32** %5, align 8
  store i32 0, i32* %3, align 4
  %52 = load i32, i32* %3, align 4
  %53 = icmp slt i32 %52, 750000
  br i1 %53, label %.lr.ph8, label %69

.lr.ph8:                                          ; preds = %49
  br label %54

; <label>:54:                                     ; preds = %.lr.ph8, %64
  %55 = load i32*, i32** %2, align 8
  %56 = load i32, i32* %3, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %5, align 8
  %61 = load i32, i32* %3, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  store i32 %59, i32* %63, align 4
  br label %64

; <label>:64:                                     ; preds = %54
  %65 = load i32, i32* %3, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %3, align 4
  %67 = load i32, i32* %3, align 4
  %68 = icmp slt i32 %67, 750000
  br i1 %68, label %54, label %._crit_edge9

._crit_edge9:                                     ; preds = %64
  br label %69

; <label>:69:                                     ; preds = %._crit_edge9, %49
  store i32 0, i32* %6, align 4
  store i32 0, i32* %3, align 4
  %70 = load i32, i32* %3, align 4
  %71 = icmp slt i32 %70, 750000
  br i1 %71, label %.lr.ph5, label %104

.lr.ph5:                                          ; preds = %69
  br label %72

; <label>:72:                                     ; preds = %.lr.ph5, %99
  %73 = load i32, i32* %6, align 4
  %74 = load i32*, i32** %2, align 8
  %75 = load i32, i32* %3, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  store i32 %73, i32* %77, align 4
  store i32 0, i32* %7, align 4
  %78 = load i32, i32* %7, align 4
  %79 = icmp slt i32 %78, 1
  br i1 %79, label %.lr.ph2, label %98

.lr.ph2:                                          ; preds = %72
  br label %80

; <label>:80:                                     ; preds = %.lr.ph2, %93
  store i32 0, i32* %8, align 4
  %81 = load i32, i32* %8, align 4
  %82 = icmp slt i32 %81, 5
  br i1 %82, label %.lr.ph, label %92

.lr.ph:                                           ; preds = %80
  br label %83

; <label>:83:                                     ; preds = %.lr.ph, %87
  %84 = load i32, i32* %7, align 4
  %85 = load i32, i32* %8, align 4
  %86 = mul nsw i32 %84, %85
  store i32 %86, i32* %6, align 4
  br label %87

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  %90 = load i32, i32* %8, align 4
  %91 = icmp slt i32 %90, 5
  br i1 %91, label %83, label %._crit_edge

._crit_edge:                                      ; preds = %87
  br label %92

; <label>:92:                                     ; preds = %._crit_edge, %80
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* %7, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %7, align 4
  %96 = load i32, i32* %7, align 4
  %97 = icmp slt i32 %96, 1
  br i1 %97, label %80, label %._crit_edge3

._crit_edge3:                                     ; preds = %93
  br label %98

; <label>:98:                                     ; preds = %._crit_edge3, %72
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* %3, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %3, align 4
  %102 = load i32, i32* %3, align 4
  %103 = icmp slt i32 %102, 750000
  br i1 %103, label %72, label %._crit_edge6

._crit_edge6:                                     ; preds = %99
  br label %104

; <label>:104:                                    ; preds = %._crit_edge6, %69
  %105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0))
  ret i32 0
}

declare void @ariel_enable() #1

; Function Attrs: noinline nounwind uwtable
define void @logo() #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i8* @_internal_malloc(i64) #1

declare i32 @printf(i8*, ...) #1

declare i8* @_internal_calloc(i64, i64) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
