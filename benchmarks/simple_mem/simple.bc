; ModuleID = 'simple_calloc.c'
source_filename = "simple_calloc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [13 x i8] c"Successful!\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Failed!\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Done!\0A\00", align 1
@.str.3 = private unnamed_addr constant [94 x i8] c"=========================\0A Simple Memory Allocator\0A\09CALLOC EDITION\0A=========================\0A\00", align 1
@loop_counter = common global i32 0, align 4
@LLVMScore = common global i64 0, align 8

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @ariel_enable()
  call void @logo()
  %9 = call i8* @_internal_malloc(i64 3000000)
  %10 = bitcast i8* %9 to i32*
  store i32* %10, i32** %2, align 8
  store i32 0, i32* %3, align 4
  br label %11

; <label>:11:                                     ; preds = %20, %0
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 750000
  br i1 %13, label %14, label %23

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* %3, align 4
  %16 = load i32*, i32** %2, align 8
  %17 = load i32, i32* %3, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  store i32 %15, i32* %19, align 4
  br label %20

; <label>:20:                                     ; preds = %14
  %21 = load i32, i32* %3, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %3, align 4
  br label %11

; <label>:23:                                     ; preds = %11
  store i8 1, i8* %4, align 1
  store i32 0, i32* %3, align 4
  br label %24

; <label>:24:                                     ; preds = %37, %23
  %25 = load i32, i32* %3, align 4
  %26 = icmp slt i32 %25, 750000
  br i1 %26, label %27, label %40

; <label>:27:                                     ; preds = %24
  %28 = load i32*, i32** %2, align 8
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %3, align 4
  %34 = icmp ne i32 %32, %33
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %27
  store i8 0, i8* %4, align 1
  br label %40

; <label>:36:                                     ; preds = %27
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* %3, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %3, align 4
  br label %24

; <label>:40:                                     ; preds = %35, %24
  %41 = load i8, i8* %4, align 1
  %42 = icmp ne i8 %41, 0
  br i1 %42, label %43, label %45

; <label>:43:                                     ; preds = %40
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0))
  br label %47

; <label>:45:                                     ; preds = %40
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0))
  br label %47

; <label>:47:                                     ; preds = %45, %43
  %48 = call i8* @_internal_calloc(i64 4, i64 750000)
  %49 = bitcast i8* %48 to i32*
  store i32* %49, i32** %5, align 8
  store i32 0, i32* %3, align 4
  br label %50

; <label>:50:                                     ; preds = %63, %47
  %51 = load i32, i32* %3, align 4
  %52 = icmp slt i32 %51, 750000
  br i1 %52, label %53, label %66

; <label>:53:                                     ; preds = %50
  %54 = load i32*, i32** %2, align 8
  %55 = load i32, i32* %3, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = load i32*, i32** %5, align 8
  %60 = load i32, i32* %3, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %59, i64 %61
  store i32 %58, i32* %62, align 4
  br label %63

; <label>:63:                                     ; preds = %53
  %64 = load i32, i32* %3, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %3, align 4
  br label %50

; <label>:66:                                     ; preds = %50
  store i32 0, i32* %6, align 4
  store i32 0, i32* %3, align 4
  br label %67

; <label>:67:                                     ; preds = %95, %66
  %68 = load i32, i32* %3, align 4
  %69 = icmp slt i32 %68, 750000
  br i1 %69, label %70, label %98

; <label>:70:                                     ; preds = %67
  %71 = load i32, i32* %6, align 4
  %72 = load i32*, i32** %2, align 8
  %73 = load i32, i32* %3, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  store i32 %71, i32* %75, align 4
  store i32 0, i32* %7, align 4
  br label %76

; <label>:76:                                     ; preds = %91, %70
  %77 = load i32, i32* %7, align 4
  %78 = icmp slt i32 %77, 1
  br i1 %78, label %79, label %94

; <label>:79:                                     ; preds = %76
  store i32 0, i32* %8, align 4
  br label %80

; <label>:80:                                     ; preds = %87, %79
  %81 = load i32, i32* %8, align 4
  %82 = icmp slt i32 %81, 5
  br i1 %82, label %83, label %90

; <label>:83:                                     ; preds = %80
  %84 = load i32, i32* %7, align 4
  %85 = load i32, i32* %8, align 4
  %86 = mul nsw i32 %84, %85
  store i32 %86, i32* %6, align 4
  br label %87

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  br label %80

; <label>:90:                                     ; preds = %80
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load i32, i32* %7, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %7, align 4
  br label %76

; <label>:94:                                     ; preds = %76
  br label %95

; <label>:95:                                     ; preds = %94
  %96 = load i32, i32* %3, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %3, align 4
  br label %67

; <label>:98:                                     ; preds = %67
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0))
  ret i32 0
}

declare void @ariel_enable() #1

; Function Attrs: noinline nounwind uwtable
define void @logo() #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i8* @_internal_malloc(i64) #1

declare i32 @printf(i8*, ...) #1

declare i8* @_internal_calloc(i64, i64) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
